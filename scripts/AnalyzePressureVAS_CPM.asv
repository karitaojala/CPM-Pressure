%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Analysis of CPAR cuff algometer online VAS rating
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Changelog
%
% Version: 1.0
% Author: Karita Ojala, k.ojala@uke.de, University Medical Center Hamburg-Eppendorf
% Date: 2021-05-12
%
% Version notes
% 1.0

function AnalyzePressureVAS_CPM

close all; clear all

plotIndividual = false; % plot individual subjects' data

project.name = 'CPM-Pressure-01';
project.phase = 'Pilot-02';

path.code = pwd;
path.main = fullfile(path.code,'..');
path.data = fullfile(path.main,'data',project.name,project.phase,'logs');

subjects = [1:2 4:6];
block_order = [1 2; 1 2; 1 2; 2 1; 2 1]; % exp (2) or control (1) block first
% stim_cuff_subs = [1 1 NaN 1 1]; % 1 = tonic stim cuff 1 (left), phasic stim cuff 2 (right); 2 = phasic stim cuff 1, tonic stim cuff 2
phasicStimPressure = [80 67 50 43 46];
% totalTrials = 14;
% calibTrials = {1:4; 5:7; 8:14};
% samplingRate = 0.005; % 200 Hz
% samplingRate_to_10 = 0.1/samplingRate;
% colors = [45, 0, 179; 89, 0, 179; 134, 0, 179; 179, 0, 179; 179, 0, 134; 179, 0, 89; 179, 0, 45]/255; % 7 different colors for different pressure levels
% colors = [0, 51, 153; 0, 102, 255; 153, 102, 255; 204, 0, 204; 255, 51, 153; 255, 102, 0; 204, 51, 0]/255;
% colors = [0, 0, 153; 0, 0, 255; 102, 102, 255; ...
%     204, 0, 255; ...
%     255, 102, 163; 255, 0, 102; 153, 0, 61]/255;

for sub = 1:numel(subjects)
    
    clear ratings_blocks pressure
    
    subID = ['sub' sprintf('%03d',subjects(sub))];
    
    path.sub = fullfile(path.data,subID,'pain');
    
    blocks_sub = block_order(sub,:);
    
    row_no = 1;
    
    for cond = blocks_sub
        
        path.datafile =  fullfile(path.sub,[subID '_VAS_rating_block' num2str(cond) '.mat']);
        
        data = load(path.datafile,'VAS');
        data = data.VAS;
        
        trials = size(data,1);
        if trials > 3; trials = trials(1:3,:); end % 4th trial (if exists) rating for tonic stimulus
        stimuli = size(data,2);
        
        ratings = [];
        
        for trial = 1:trials
            
            for stim = 1:stimuli
                
                ratings = [ratings data(trial,stim).phasicStim.finalRating]; %#ok<AGROW>
                
            end
            
        end
        
        ratings_blocks(row_no,:) = ratings; %#ok<AGROW>
        
        row_no = row_no + 1;
        
    end
    
    pressure = ones(length(ratings),2)*phasicStimPressure(sub); %#ok<AGROW>
    
%     format long
%     y = ratings';
%     x = pressure';
%     X = [ones(length(x),1) x];
%     b = X\y;
%     yCalc = X*b;
    

    if plotIndividual
        
        figure %#ok<UNRCH>
        bar(mean(ratings_blocks,2),'LineWidth',1); 
        hold on
        
        xdata = repmat([1 2],size(ratings_blocks,2),1);
        jitter_amount = 0.05;
        jittered_xdata = xdata + (rand(size(xdata))-0.5)*(2*jitter_amount);
        jittered_xdata = jittered_xdata';
        
        for cond = 1:2
            scatter(jittered_xdata(cond,:),ratings_blocks(cond,:),'filled','MarkerEdgeColor','k');
        end
        
        ylim([0 100])
        ylabel('VAS pain rating')
        set(gca,'xTickLabel', {'Control','Experimental'})
        
%         legend('Control','Experimental')
        title(['Conditioned pain modulation - / ' project.phase ' - ' subID])
        
    end
    
    ratings_allsubs{sub} = ratings; %#ok<NASGU,AGROW>
    pressure_allsubs{sub} = pressure; %#ok<NASGU,AGROW>
    ratings_allsubs_mean_exp(sub) = mean(ratings_blocks(1,:));
    ratings_allsubs_mean_control(sub) = mean(ratings_blocks(2,:));
    
end

cpm_data = [ratings_allsubs_mean_exp; ratings_allsubs_mean_control]';

% Calculate within-subject error bars
subavg = nanmean(cpm_data,2); % mean over conditions for each sub
grandavg = nanmean(subavg); % mean over subjects and conditions

newvalues = nan(size(cpm_data));

% normalization of subject values
for cond = 1:2
    meanremoved = cpm_data(:,cond)-subavg; % remove mean of conditions from each condition value for each sub
    newvalues(:,cond) = meanremoved+repmat(grandavg,[numel(subjects) 1 1]); % add grand average over subjects to the values where individual sub average was removed
    bardata(:,cond) = nanmean(newvalues(:,cond));
end

tvalue = tinv(1-0.025, numel(subjects)-1);
newvar = (cond/(cond-1))*nanvar(newvalues);
errorbars = squeeze(tvalue*(sqrt(newvar)./sqrt(numel(subjects)))); % calculate error bars according to Cousineau (2005) with Morey (2008) fix
    
% Averaged plot over subjects
figure;

bardata = [mean(ratings_allsubs_mean_exp); mean(ratings_allsubs_mean_control)];
bar(bardata,'LineWidth',1);  
hold on
errorbar(1:2,bardata',errorbars,'k','LineStyle','none','LineWidth',2,'CapSize',0)
hold on
xdata = repmat([1 2],size(cpm_data),1);
jitter_amount = 0.05;
jittered_xdata = xdata + (rand(size(xdata))-0.5)*(2*jitter_amount);
jittered_xdata = jittered_xdata';

for cond = 1:2
    scatter(jittered_xdata(cond,:),cpm_data(cond,:),'filled','MarkerEdgeColor','k');
end
        
ylim([0 100])
ylabel('VAS pain rating')
set(gca,'xTickLabel', {'Control','Experimental'})

title(['Conditioned pain modulation / ' project.phase ' - N = ' num2str(numel(subjects))])


end