%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Analysis of CPAR cuff algometer online VAS rating
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Changelog
%
% Version: 1.0
% Author: Karita Ojala, k.ojala@uke.de, University Medical Center Hamburg-Eppendorf
% Date: 2021-05-12
%
% Version notes
% 1.0

function AnalyzePressureVAS

close all; clear all

plotIndividual = true; % plot individual subjects' data

project.name = 'CPM-Pressure-01';
project.phase = 'Pilot-02';

path.code = pwd;
path.main = fullfile(path.code,'..');
path.data = fullfile(path.main,'data',project.name,project.phase,'logs');

subjects = 1:2;
totalTrials = 14;
calibTrials = {1:4; 5:7; 8:14};
% samplingRate = 0.005; % 200 Hz
% samplingRate_to_10 = 0.1/samplingRate;
% colors = [45, 0, 179; 89, 0, 179; 134, 0, 179; 179, 0, 179; 179, 0, 134; 179, 0, 89; 179, 0, 45]/255; % 7 different colors for different pressure levels
% colors = [0, 51, 153; 0, 102, 255; 153, 102, 255; 204, 0, 204; 255, 51, 153; 255, 102, 0; 204, 51, 0]/255;
colors = [0, 0, 153; 0, 0, 255; 102, 102, 255; ...
    204, 0, 255; ...
    255, 102, 163; 255, 0, 102; 153, 0, 61]/255;

for sub = 1:numel(subjects)
    
    subID = ['sub' sprintf('%03d',subjects(sub))];
    
    path.sub = fullfile(path.data,subID,'pain');
    path.datafile =  fullfile(path.sub,[subID '_VAS_calibration.mat']);
    
    data = load(path.datafile,'VAS');
    
    ratings = [];
    pressure = [];
    
    for step = 1:3
        ratings = [ratings data(step).calibStep.finalRating]; %#ok<AGROW>
        pressure = [pressure data(step).calibStep.trialPressure]; %#ok<AGROW>
    end
    
    if plotIndividual
       
        figure
        plot(pressure,ratings, 'Color',colors(1:2,:),'LineWidth',2,'LineStyle','-', 'Marker', 'none'); %#ok<UNRCH>
    hold on
    ylim([0 10])
    xlim([0 65])
    xticks(0:5:65)
    xticklabels(0:5:65)
    ylabel('VAS rating')
    xlabel('Time (sec)')
    
    title(['Pressure test - ' project.name ' / ' project.phase ' - ' subID])
    pressureTitles{pressureLevel} = [num2str(pressureLevels(pressureLevel)) ' kPa'];
    
    
    ratings_allsubs(sub,:) = ratings; %#ok<AGROW>
    pressure_allsubs(sub,:) = pressure;
end

VASmean_allsubjects = squeeze(nanmean(VAS_allsubjects,1));

% Averaged plot over subjects
figure;

for pressureLevel = 1:length(pressureLevels)
    
    pressurePlot_all(pressureLevel) = plot(timeX(1,1:samplingRate_to_10:end), VASmean_allsubjects(pressureLevel,:), 'Color',colors(pressureLevel,:),'LineWidth',2,'LineStyle','-', 'Marker', 'none');  %#ok<AGROW>
    hold on
    ylim([0 10])
    xlim([0 65])
    xticks(0:5:65)
    xticklabels(0:5:65)
    ylabel('VAS rating')
    xlabel('Time (sec)')
    
end

title(['Pressure test - ' project.name ' / ' project.phase ' - average N = ' num2str(numel(subjects))])

pressureTitles = {'+9 kPa' '+6 kPa' '+3 kPa' 'Pain threshold' '-3 kPa' '-6 kPa' '-9 kPa'};
% [~,lineHandles] = legend(pressureTitles,'Location','northwest');
% % Reverse legend strings
% reverseTitles = flipud(get(lineHandles(1:7),'string'));
legend([pressurePlot_all(7) pressurePlot_all(6) pressurePlot_all(5) pressurePlot_all(4) pressurePlot_all(3) pressurePlot_all(2) pressurePlot_all(1)],pressureTitles,'location','northwest')
legend boxoff

% Block-wise plot over subjects

VASmean_allsubjects_block = squeeze(nanmean(VAS_allsubjects_block,1));
% VASmean_allsubjects_block = smoothdata(VASmean_allsubjects_block,2,'gaussian',200);

figure('Position',[300,300,1000,200]);

for block = 1:3
    
    subplot(1,3,block)
    
    for pressureLevel = 1:length(pressureLevels)
        
        pressurePlot_all_bl(pressureLevel) = plot(timeX(1,1:samplingRate_to_10:end), VASmean_allsubjects_block(pressureLevel,:,block), 'Color',colors(pressureLevel,:),'LineWidth',2,'LineStyle','-', 'Marker', 'none');
        hold on
        ylim([0 10])
        xlim([0 65])
        xticks(0:5:65)
        xticklabels(0:5:65)
        xlabel('Time (sec)')
        
    end
    
    if block == 1
        ylabel('VAS rating')
        %         legend([pressurePlot_all_bl(7) pressurePlot_all_bl(6) pressurePlot_all_bl(5) pressurePlot_all_bl(4) pressurePlot_all_bl(3) pressurePlot_all_bl(2) pressurePlot_all_bl(1)],pressureTitles,'location','southoutside')
        %         legend boxoff
    end
    
    title(['Block ' num2str(block) '/3'])
    
end

%title(['Pressure test - ' project.name ' / ' project.phase ' - block ' num2str(block) 'average N = ' num2str(numel(subjects))])


end